////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(x, y, n=1) {
  var output = [];

  if (x === y) {
    return output
  }

 if (n > 0) {
    for (var i = x; i <= y; i += n)
      output.push(i);
  } 
  else {
    for (var i = x; i >= y; i += n)
      output.push(i);
  }

  return output;
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(array) {
 return (array.length === 0) ? 0 : array[0] + sum(array.slice(1));
 }

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
 var newarray = array.slice().reverse();
 return newarray;
  }
  

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
for (var i = 0; i < Math.floor(array.length/2); i++) {
  [array[i], array[array.length-1-i]] = [array[array.length-1-i], array[i]]
}
return array
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
var output = {};

var currListItem = output;

  for (var item of array) {
      var newListItem = {
      	value: item,
      	rest: null
      };
      if (typeof currListItem.rest === 'undefined') {
        output = newListItem;
      } else {
      	currListItem.rest = newListItem;
      }
      currListItem = newListItem;
    }
  
  return output;
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list) {
  let output = [];

    output.push(list.value);
    while (list.hasOwnProperty('rest') && list.rest !== null) {
      list = list.rest;
      if (list.hasOwnProperty('value')) {
      	output.push(list.value);
      }
    }
  
  return output;
}


////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(item, list) {
return {
    value: item,
    rest: list
  };
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, number) {
return listToArray(list)[number];
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
function deepEqual(a, b){
  if(typeof a !== 'object' && typeof b !== 'object'){
    return a === b;
  }
  if(typeof a !== 'object' || typeof b !== 'object'){
    return false;
  }
  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);
  if(aKeys.length !== bKeys.length){
    return false;
  }
  for(let i = 0; i < aKeys.length; i++){
    if(!aKeys.includes(bKeys[i]) || !deepEqual(a[aKeys[i]], b[aKeys[i]])){
      return false;
    }
  }
  return true;
}
console.log(deepEqual('a', 'b'));
console.log(deepEqual({a:1},{a:1}));


////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
